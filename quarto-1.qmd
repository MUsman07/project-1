---
title: "Quarto 1"
author: "M USMAN"
format: html
execute: 
  echo: false
---


```{r}
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(palmerpenguins))
```

```{r}
# Beautiful Palmer Penguins Visualization - Fixed Version
# Using tidyverse with compatibility fixes

# Load required libraries
library(patchwork)
library(viridis)
library(ggridges)
library(ggbeeswarm)

# Load the penguins data
data(penguins)

# Data exploration and cleaning
penguins_clean <- penguins %>%
  drop_na() %>%
  mutate(
    species = factor(species, levels = c("Adelie", "Chinstrap", "Gentoo")),
    island = factor(island),
    sex = factor(sex, levels = c("male", "female")),
    body_mass_kg = body_mass_g / 1000,
    bill_ratio = bill_length_mm / bill_depth_mm
  )

# Define color palette for species
species_colors <- c(
  "Adelie" = "#FF6B35",
  "Chinstrap" = "#F7931E", 
  "Gentoo" = "#004E89"
)

# Create custom theme - using default system font
theme_penguin <- function() {
  theme_minimal() +
  theme(
    plot.background = element_rect(fill = "#f8f9fa", color = NA),
    panel.background = element_rect(fill = "white", color = NA),
    panel.grid.minor = element_blank(),
    panel.grid.major = element_line(color = "#e9ecef", linewidth = 0.3),
    text = element_text(color = "#2c3e50"),
    plot.title = element_text(size = 16, face = "bold", margin = margin(b = 10)),
    plot.subtitle = element_text(size = 12, color = "#7f8c8d", margin = margin(b = 15)),
    plot.caption = element_text(size = 9, color = "#95a5a6", hjust = 0),
    axis.title = element_text(size = 11, face = "bold"),
    axis.text = element_text(size = 10),
    legend.title = element_text(size = 11, face = "bold"),
    legend.text = element_text(size = 10),
    strip.text = element_text(size = 11, face = "bold"),
    strip.background = element_rect(fill = "#ecf0f1", color = NA)
  )
}

# 1. Main scatterplot with regression lines
main_plot <- penguins_clean %>%
  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) +
  geom_point(
    aes(color = species, size = body_mass_kg), 
    alpha = 0.8,
    stroke = 0.5
  ) +
  geom_smooth(
    aes(color = species, fill = species), 
    method = "lm", 
    se = TRUE, 
    alpha = 0.2,
    linewidth = 1.2
  ) +
  scale_color_manual(values = species_colors, name = "Species") +
  scale_fill_manual(values = species_colors, name = "Species") +
  scale_size_continuous(
    name = "Body Mass (kg)", 
    range = c(2, 8),
    breaks = c(3, 4, 5, 6),
    labels = c("3", "4", "5", "6")
  ) +
  labs(
    title = "Palmer Penguins: Bill Dimensions Analysis",
    subtitle = "Relationship between bill length and depth across three penguin species",
    x = "Bill Length (mm)",
    y = "Bill Depth (mm)",
    caption = "Data: Palmer Station Antarctica LTER | Visualization: tidyverse & ggplot2"
  ) +
  theme_penguin() +
  guides(
    color = guide_legend(override.aes = list(size = 4)),
    size = guide_legend(override.aes = list(color = "grey50"))
  )

# 2. Body mass distribution by species
mass_plot <- penguins_clean %>%
  ggplot(aes(x = body_mass_kg, y = species, fill = species)) +
  geom_density_ridges(
    alpha = 0.8, 
    scale = 0.9,
    rel_min_height = 0.01,
    color = "white",
    linewidth = 0.8
  ) +
  scale_fill_manual(values = species_colors) +
  scale_x_continuous(
    labels = function(x) paste0(x, " kg"),
    breaks = scales::pretty_breaks(n = 5)
  ) +
  labs(
    title = "Body Mass Distribution",
    subtitle = "Density curves by species",
    x = "Body Mass (kg)",
    y = ""
  ) +
  theme_penguin() +
  theme(
    legend.position = "none",
    axis.text.y = element_text(size = 12, face = "bold")
  )

# 3. Island and sex composition
composition_plot <- penguins_clean %>%
  count(species, island, sex) %>%
  ggplot(aes(x = island, y = n, fill = sex)) +
  geom_col(position = "dodge", alpha = 0.8, color = "white", linewidth = 0.5) +
  facet_wrap(~species, scales = "free_y") +
  scale_fill_manual(
    values = c("male" = "#3498db", "female" = "#e74c3c"),
    name = "Sex"
  ) +
  labs(
    title = "Population Composition",
    subtitle = "Count by island and sex for each species",
    x = "Island",
    y = "Count"
  ) +
  theme_penguin() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    panel.spacing = unit(1, "lines")
  )

# 4. Flipper length vs body mass with beeswarm
flipper_plot <- penguins_clean %>%
  ggplot(aes(x = species, y = flipper_length_mm, color = species)) +
  geom_beeswarm(
    aes(size = body_mass_kg),
    alpha = 0.7,
    cex = 0.8
  ) +
  geom_boxplot(
    aes(fill = species),
    alpha = 0.3,
    outlier.shape = NA,
    color = "grey30",
    linewidth = 0.8
  ) +
  scale_color_manual(values = species_colors) +
  scale_fill_manual(values = species_colors) +
  scale_size_continuous(range = c(1, 4), guide = "none") +
  labs(
    title = "Flipper Length Distribution",
    subtitle = "Beeswarm plot with boxplots overlay",
    x = "Species",
    y = "Flipper Length (mm)"
  ) +
  theme_penguin() +
  theme(
    legend.position = "none",
    axis.text.x = element_text(size = 12, face = "bold")
  )

# 5. Correlation heatmap
correlation_data <- penguins_clean %>%
  select(bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g) %>%
  cor() %>%
  as.data.frame() %>%
  rownames_to_column("var1") %>%
  pivot_longer(-var1, names_to = "var2", values_to = "correlation") %>%
  mutate(
    var1 = factor(var1, levels = c("body_mass_g", "flipper_length_mm", "bill_depth_mm", "bill_length_mm")),
    var2 = factor(var2, levels = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"))
  )

correlation_plot <- correlation_data %>%
  ggplot(aes(x = var2, y = var1, fill = correlation)) +
  geom_tile(color = "white", linewidth = 0.5) +
  geom_text(
    aes(label = round(correlation, 2)),
    color = "white",
    fontface = "bold",
    size = 4
  ) +
  scale_fill_gradient2(
    low = "#e74c3c", 
    mid = "white", 
    high = "#3498db",
    midpoint = 0,
    name = "Correlation",
    limits = c(-1, 1)
  ) +
  labs(
    title = "Feature Correlations",
    subtitle = "Pearson correlation matrix",
    x = "",
    y = ""
  ) +
  theme_penguin() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    panel.grid = element_blank()
  ) +
  coord_fixed()

# Alternative: Create individual plots for better readability
cat("Creating individual plots for better visualization...\n")

# Display plots one by one
print("Main scatterplot:")
print(main_plot)

print("Body mass distribution:")
print(mass_plot)

print("Population composition:")
print(composition_plot)

print("Flipper length distribution:")
print(flipper_plot)

print("Correlation heatmap:")
print(correlation_plot)

# Create a simpler, more readable dashboard
simple_dashboard <- (main_plot + mass_plot) / (composition_plot + correlation_plot)

print("Simplified dashboard:")
print(simple_dashboard)

# Summary statistics
cat("\n=== PALMER PENGUINS DATASET SUMMARY ===\n")

# Basic statistics by species
summary_stats <- penguins_clean %>%
  group_by(species) %>%
  summarise(
    count = n(),
    avg_bill_length = round(mean(bill_length_mm), 1),
    avg_bill_depth = round(mean(bill_depth_mm), 1),
    avg_flipper_length = round(mean(flipper_length_mm), 1),
    avg_body_mass = round(mean(body_mass_kg), 2),
    .groups = 'drop'
  )

print(summary_stats)

# Additional simple plots for better readability
cat("\n=== CREATING SIMPLE, READABLE PLOTS ===\n")

# Simple species comparison
simple_comparison <- penguins_clean %>%
  ggplot(aes(x = species, y = body_mass_g, fill = species)) +
  geom_violin(alpha = 0.7, color = "white", linewidth = 1) +
  geom_boxplot(width = 0.2, alpha = 0.8, color = "grey20", linewidth = 0.8) +
  scale_fill_manual(values = species_colors) +
  scale_y_continuous(labels = scales::comma_format(suffix = "g")) +
  labs(
    title = "Body Mass Distribution by Species",
    subtitle = "Violin plots with boxplots showing distribution shape and quartiles",
    x = "Species",
    y = "Body Mass (g)"
  ) +
  theme_penguin() +
  theme(
    legend.position = "none",
    axis.text.x = element_text(size = 14, face = "bold")
  )

print(simple_comparison)

cat("\n=== VISUALIZATION COMPLETE ===\n")

```
